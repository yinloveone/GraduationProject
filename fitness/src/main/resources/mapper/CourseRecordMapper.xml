<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pers.aiyin.fitness.mapper.CourseRecordMapper">
  <resultMap id="BaseResultMap" type="com.pers.aiyin.fitness.entity.CourseRecord">
    <id column="course_record_id" jdbcType="INTEGER" property="courseRecordId" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="scdate" jdbcType="DATE" property="scdate" />
    <result column="sign_in" jdbcType="TINYINT" property="signIn" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_record_id, stu_id, course_id, scdate, sign_in, content, score, is_valid, is_delete, 
    comment_time
  </sql>
  <select id="selectByExample" parameterType="com.pers.aiyin.fitness.entity.CourseRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from courserecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from courserecord
    where course_record_id = #{courseRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from courserecord
    where course_record_id = #{courseRecordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pers.aiyin.fitness.entity.CourseRecordExample">
    delete from courserecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pers.aiyin.fitness.entity.CourseRecord">
    insert into courserecord (course_record_id, stu_id, course_id, 
      scdate, sign_in, content, 
      score, is_valid, is_delete, 
      comment_time)
    values (#{courseRecordId,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{scdate,jdbcType=DATE}, #{signIn,jdbcType=TINYINT}, #{content,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{isValid,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}, 
      #{commentTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pers.aiyin.fitness.entity.CourseRecord">
    insert into courserecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseRecordId != null">
        course_record_id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="scdate != null">
        scdate,
      </if>
      <if test="signIn != null">
        sign_in,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseRecordId != null">
        #{courseRecordId,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="scdate != null">
        #{scdate,jdbcType=DATE},
      </if>
      <if test="signIn != null">
        #{signIn,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pers.aiyin.fitness.entity.CourseRecordExample" resultType="java.lang.Long">
    select count(*) from courserecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update courserecord
    <set>
      <if test="record.courseRecordId != null">
        course_record_id = #{record.courseRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.scdate != null">
        scdate = #{record.scdate,jdbcType=DATE},
      </if>
      <if test="record.signIn != null">
        sign_in = #{record.signIn,jdbcType=TINYINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update courserecord
    set course_record_id = #{record.courseRecordId,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      scdate = #{record.scdate,jdbcType=DATE},
      sign_in = #{record.signIn,jdbcType=TINYINT},
      content = #{record.content,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      is_valid = #{record.isValid,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pers.aiyin.fitness.entity.CourseRecord">
    update courserecord
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="scdate != null">
        scdate = #{scdate,jdbcType=DATE},
      </if>
      <if test="signIn != null">
        sign_in = #{signIn,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where course_record_id = #{courseRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pers.aiyin.fitness.entity.CourseRecord">
    update courserecord
    set stu_id = #{stuId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      scdate = #{scdate,jdbcType=DATE},
      sign_in = #{signIn,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where course_record_id = #{courseRecordId,jdbcType=INTEGER}
  </update>
</mapper>