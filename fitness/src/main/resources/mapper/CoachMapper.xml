<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pers.aiyin.fitness.mapper.CoachMapper">
  <resultMap id="BaseResultMap" type="com.pers.aiyin.fitness.entity.Coach">
    <id column="coach_id" jdbcType="INTEGER" property="coachId" />
    <result column="coach_name" jdbcType="VARCHAR" property="coachName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="grade" jdbcType="TINYINT" property="grade" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="coach_portrait" jdbcType="VARCHAR" property="coachPortrait" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    coach_id, coach_name, password, sex, age, grade, birthday, coach_portrait, phone, 
    is_valid, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.pers.aiyin.fitness.entity.CoachExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from coach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coach
    where coach_id = #{coachId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coach
    where coach_id = #{coachId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pers.aiyin.fitness.entity.CoachExample">
    delete from coach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pers.aiyin.fitness.entity.Coach">
    insert into coach (coach_id, coach_name, password, 
      sex, age, grade, birthday, 
      coach_portrait, phone, is_valid, 
      is_delete)
    values (#{coachId,jdbcType=INTEGER}, #{coachName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{age,jdbcType=INTEGER}, #{grade,jdbcType=TINYINT}, #{birthday,jdbcType=DATE}, 
      #{coachPortrait,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{isValid,jdbcType=TINYINT}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pers.aiyin.fitness.entity.Coach">
    insert into coach
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coachId != null">
        coach_id,
      </if>
      <if test="coachName != null">
        coach_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="coachPortrait != null">
        coach_portrait,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coachId != null">
        #{coachId,jdbcType=INTEGER},
      </if>
      <if test="coachName != null">
        #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="coachPortrait != null">
        #{coachPortrait,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pers.aiyin.fitness.entity.CoachExample" resultType="java.lang.Long">
    select count(*) from coach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coach
    <set>
      <if test="record.coachId != null">
        coach_id = #{record.coachId,jdbcType=INTEGER},
      </if>
      <if test="record.coachName != null">
        coach_name = #{record.coachName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.coachPortrait != null">
        coach_portrait = #{record.coachPortrait,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=TINYINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coach
    set coach_id = #{record.coachId,jdbcType=INTEGER},
      coach_name = #{record.coachName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      age = #{record.age,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=DATE},
      coach_portrait = #{record.coachPortrait,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=TINYINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pers.aiyin.fitness.entity.Coach">
    update coach
    <set>
      <if test="coachName != null">
        coach_name = #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="coachPortrait != null">
        coach_portrait = #{coachPortrait,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where coach_id = #{coachId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pers.aiyin.fitness.entity.Coach">
    update coach
    set coach_name = #{coachName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      age = #{age,jdbcType=INTEGER},
      grade = #{grade,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=DATE},
      coach_portrait = #{coachPortrait,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where coach_id = #{coachId,jdbcType=INTEGER}
  </update>

</mapper>