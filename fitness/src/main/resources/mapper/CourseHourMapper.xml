<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pers.aiyin.fitness.mapper.CourseHourMapper">
  <resultMap id="BaseResultMap" type="com.pers.aiyin.fitness.entity.CourseHour">
    <id column="hour_id" jdbcType="INTEGER" property="hourId" />
    <result column="hour_name" jdbcType="VARCHAR" property="hourName" />
    <result column="coach_id" jdbcType="INTEGER" property="coachId" />
    <result column="coach_name" jdbcType="VARCHAR" property="coachName" />
    <result column="hour_count" jdbcType="INTEGER" property="hourCount" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hour_id, hour_name, coach_id, coach_name, hour_count, stu_id, stu_name
  </sql>
  <select id="selectByExample" parameterType="com.pers.aiyin.fitness.entity.CourseHourExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from coursehour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coursehour
    where hour_id = #{hourId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from coursehour
    where hour_id = #{hourId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pers.aiyin.fitness.entity.CourseHourExample">
    delete from coursehour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pers.aiyin.fitness.entity.CourseHour">
    insert into coursehour (hour_id, hour_name, coach_id, 
      coach_name, hour_count, stu_id, 
      stu_name)
    values (#{hourId,jdbcType=INTEGER}, #{hourName,jdbcType=VARCHAR}, #{coachId,jdbcType=INTEGER}, 
      #{coachName,jdbcType=VARCHAR}, #{hourCount,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER}, 
      #{stuName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pers.aiyin.fitness.entity.CourseHour">
    insert into coursehour
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hourId != null">
        hour_id,
      </if>
      <if test="hourName != null">
        hour_name,
      </if>
      <if test="coachId != null">
        coach_id,
      </if>
      <if test="coachName != null">
        coach_name,
      </if>
      <if test="hourCount != null">
        hour_count,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hourId != null">
        #{hourId,jdbcType=INTEGER},
      </if>
      <if test="hourName != null">
        #{hourName,jdbcType=VARCHAR},
      </if>
      <if test="coachId != null">
        #{coachId,jdbcType=INTEGER},
      </if>
      <if test="coachName != null">
        #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="hourCount != null">
        #{hourCount,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pers.aiyin.fitness.entity.CourseHourExample" resultType="java.lang.Long">
    select count(*) from coursehour
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coursehour
    <set>
      <if test="record.hourId != null">
        hour_id = #{record.hourId,jdbcType=INTEGER},
      </if>
      <if test="record.hourName != null">
        hour_name = #{record.hourName,jdbcType=VARCHAR},
      </if>
      <if test="record.coachId != null">
        coach_id = #{record.coachId,jdbcType=INTEGER},
      </if>
      <if test="record.coachName != null">
        coach_name = #{record.coachName,jdbcType=VARCHAR},
      </if>
      <if test="record.hourCount != null">
        hour_count = #{record.hourCount,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coursehour
    set hour_id = #{record.hourId,jdbcType=INTEGER},
      hour_name = #{record.hourName,jdbcType=VARCHAR},
      coach_id = #{record.coachId,jdbcType=INTEGER},
      coach_name = #{record.coachName,jdbcType=VARCHAR},
      hour_count = #{record.hourCount,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=INTEGER},
      stu_name = #{record.stuName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pers.aiyin.fitness.entity.CourseHour">
    update coursehour
    <set>
      <if test="hourName != null">
        hour_name = #{hourName,jdbcType=VARCHAR},
      </if>
      <if test="coachId != null">
        coach_id = #{coachId,jdbcType=INTEGER},
      </if>
      <if test="coachName != null">
        coach_name = #{coachName,jdbcType=VARCHAR},
      </if>
      <if test="hourCount != null">
        hour_count = #{hourCount,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
    </set>
    where hour_id = #{hourId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pers.aiyin.fitness.entity.CourseHour">
    update coursehour
    set hour_name = #{hourName,jdbcType=VARCHAR},
      coach_id = #{coachId,jdbcType=INTEGER},
      coach_name = #{coachName,jdbcType=VARCHAR},
      hour_count = #{hourCount,jdbcType=INTEGER},
      stu_id = #{stuId,jdbcType=INTEGER},
      stu_name = #{stuName,jdbcType=VARCHAR}
    where hour_id = #{hourId,jdbcType=INTEGER}
  </update>
</mapper>